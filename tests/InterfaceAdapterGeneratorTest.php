<?php

declare(strict_types=1);

use PHPUnit\Framework\TestCase;
use Pozys\SpaceBattle\Application\Scopes\InitCommand;
use Pozys\SpaceBattle\Container;
use Pozys\SpaceBattle\Core\InterfaceAdapterGenerator;
use Pozys\SpaceBattle\Interfaces\GameObjectInterface;
use Pozys\SpaceBattle\Interfaces\MovingInterface;
use Pozys\SpaceBattle\Plugins\MovingPlugin;

final class InterfaceAdapterGeneratorTest extends TestCase
{
    public static function setUpBeforeClass(): void
    {
        (new InitCommand())->execute();
    }

    public function testSuccessfullGeneration(): void
    {
        $interfaceName = MovingInterface::class;
        $generator = new InterfaceAdapterGenerator($interfaceName, 'AutoGeneratedMovingInterfaceAdapter');

        $result = $generator->generate();

        $this->assertStringEqualsFile($this->getFixtureFilePath('MovingInterfaceAdapter'), $result);
    }

    public function testGeneratorThrowsExceptionWhenInterfaceDoesNotExist(): void
    {
        $this->expectException(\Exception::class);

        $interfaceName = 'NonExistingInterface';

        $generator = new InterfaceAdapterGenerator($interfaceName, 'AutoGeneratedMovingInterfaceAdapter');
        $generator->generate();
    }

    public function testAdapterCanBeResolved(): void
    {
        MovingPlugin::load();

        $mock = $this->createMock(GameObjectInterface::class);
        $adapter = Container::resolve('Adapter', $mock);

        $this->assertInstanceOf(MovingInterface::class, $adapter);
    }

    private function getFixtureFilePath(string $name): string
    {
        return __DIR__ . '/fixtures/' . $name;
    }
}
